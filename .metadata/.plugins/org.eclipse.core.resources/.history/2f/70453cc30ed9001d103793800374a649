package com.example.service;


import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletResponse;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Example;
import org.springframework.stereotype.Service;

import com.example.entity.CitizenPlan;
import com.example.repo.CitizenPlanRepo;
import com.example.request.SearchRequest;
import com.lowagie.text.Document;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import com.lowagie.text.Font;
import com.lowagie.text.FontFactory;
import com.lowagie.text.pdf.CMYKColor;
import com.lowagie.text.pdf.PdfPCell;

@Service
public class ReportServiceImpl implements ReportService {

	@Autowired
	private CitizenPlanRepo repo;

	@Override
	public List<String> getPlanNames() {

		return repo.getPlanName();
	}

	@Override
	public List<String> getPlanStatuses() {

		return repo.getPlanStatus();
	}

	@Override
	public List<CitizenPlan> search(SearchRequest request) {

		CitizenPlan entity = new CitizenPlan();

		if (null != request.getPlanName() && !"".equals(request.getPlanName())) {
			entity.setPlanName(request.getPlanName());
		}

		if (null != request.getPlanStatus() && !"".equals(request.getPlanStatus())) {
			entity.setPlanStatus(request.getPlanStatus());
		}

		if (null != request.getGender() && !"".equals(request.getGender())) {
			entity.setGender(request.getGender());
		}
		if (null != request.getPlanStartDate() && !"".equals(request.getPlanStartDate())) {

			String startDate = request.getPlanStartDate();

			DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
			LocalDate localDate = LocalDate.parse(startDate, formatter);

			entity.setPlanStartDate(localDate);
		}

		if (null != request.getPlanEndDate() && !"".equals(request.getPlanEndDate())) {

			String endDate = request.getPlanEndDate();

			DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
			LocalDate localDate = LocalDate.parse(endDate, formatter);

			entity.setPlanEndDate(localDate);
		}

		Example<CitizenPlan> example = Example.of(entity);

		List<CitizenPlan> findAll = repo.findAll(example);

		findAll.forEach(System.out::println);

		return findAll;
	}

	@Override
	public Boolean exportExcel(HttpServletResponse response) throws Exception {

		return true;
	}

	@Override
	public Boolean exportPdf(HttpServletResponse response) throws Exception {


		Document document=new Document(PageSize.A4);
		PdfWriter.getInstance(document, response.getOutputStream());
		
		document.open();
		
		
		// Creating font
				// Setting font style and size
				Font fontTiltle = FontFactory.getFont(FontFactory.TIMES_ROMAN);
				fontTiltle.setSize(20);

				// Creating paragraph
				Paragraph paragraph = new Paragraph("Citizen Plans", fontTiltle);

				// Aligning the paragraph in document
				paragraph.setAlignment(Paragraph.ALIGN_CENTER);

				// Adding the created paragraph in document
				document.add(paragraph);
		
		
		
		
		PdfPTable table= new PdfPTable(6);
		table.setSpacingBefore(7);
		
		
		// Create Table Cells for table header
				PdfPCell cell = new PdfPCell();

				// Setting the background color and padding
				cell.setBackgroundColor(CMYKColor.MAGENTA);
				cell.setPadding(7);
		
		
		
		table.addCell("Id");
		table.addCell("Citizen Name");
		table.addCell("Plan Name");
		table.addCell("Plan Status");
		table.addCell("Start Date");
		table.addCell("End Date");
		
		
		List<CitizenPlan> plans = repo.findAll();
		
		for (CitizenPlan Plan : plans) {
			
			table.addCell(String.valueOf(Plan.getCitizenId()));
			table.addCell(Plan.getCitizenName());
			table.addCell(Plan.getPlanName());
			table.addCell(Plan.getPlanStatus());
			
			if (null != Plan.getPlanStartDate()) {
				table.addCell(Plan.getPlanStartDate()+"");
			}else {
				table.addCell("N/A");
			}
			
			
            if (null != Plan.getPlanEndDate()) {
            	table.addCell(Plan.getPlanEndDate()+"");
			}else {
				table.addCell("N/A");
			}
	
			
		}
		
	
		document.add(table);
		document.close();
		return true;
	}

}
